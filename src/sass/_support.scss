@function str-replace($string, $search, $replace: "") {

    $index: str-index($string, $search);
  
    @if $index {
      @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
  
    @return $string;
  }
  
  @mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;
  
    $extmods: (
      eot: "?",
      svg: "#" + str-replace($name, " ", "_")
    );
  
    $formats: (
      otf: "opentype",
      ttf: "truetype"
    );
  
    @each $ext in $exts {
      $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
      $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
      $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
    }
  
    @font-face {
      font-family: quote($name);
      font-weight: $weight;
      font-style: $style;
  
      // font-display: block;
      src: $src;
    }
}


*,
*::before,
*::after {
  box-sizing: border-box;
}

ul,
ol {
  padding: 0;
}

body,
h1,
h2,
h3,
h4,
p,
ul,
ol,
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

ul,
ol {
  list-style: none;
}

a {
  text-decoration-skip-ink: auto;
}

.link {
  text-decoration: none;
  color: inherit;
  &:hover {
    color: inherit;
	text-decoration: none
  }
}

img {
  width: 100%;
  display: block;
}

article > * + * {
  margin-top: 1em;
}

input,
button,
textarea,
select {
  font: inherit;
}
